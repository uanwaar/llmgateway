# LLM Gateway deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-gateway
  namespace: llm-gateway
  labels:
    app: llm-gateway
    version: v1
    component: gateway
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: llm-gateway
  template:
    metadata:
      labels:
        app: llm-gateway
        version: v1
        component: gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: llm-gateway-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: gateway
        image: llm-gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        # Configuration from ConfigMap
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: LOG_LEVEL
        - name: CACHE_ENABLED
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: CACHE_ENABLED
        - name: CACHE_BACKEND
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: CACHE_BACKEND
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: REDIS_URL
        - name: RATE_LIMIT_ENABLED
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: RATE_LIMIT_ENABLED
        - name: AUTH_MODE
          valueFrom:
            configMapKeyRef:
              name: llm-gateway-config
              key: AUTH_MODE
        
        # Secrets
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-gateway-secrets
              key: OPENAI_API_KEY
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-gateway-secrets
              key: GEMINI_API_KEY
        
        # Resource limits and requests
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # Startup probe for slow-starting containers
        startupProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        # Volume mounts
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      
      # Volumes
      volumes:
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      
      # DNS configuration
      dnsPolicy: ClusterFirst
      
      # Restart policy
      restartPolicy: Always
      
      # Termination grace period
      terminationGracePeriodSeconds: 30
      
      # Node affinity (optional - distribute across nodes)
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - llm-gateway
              topologyKey: kubernetes.io/hostname