# Production Dockerfile with optimizations
FROM node:18-alpine AS dependencies

WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

FROM node:18-alpine AS build

WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
RUN npm run build

FROM node:18-alpine AS production

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S gateway -u 1001

WORKDIR /app

# Copy dependencies
COPY --from=dependencies --chown=gateway:nodejs /app/node_modules ./node_modules

# Copy built application
COPY --from=build --chown=gateway:nodejs /app/dist ./dist
COPY --from=build --chown=gateway:nodejs /app/config ./config
COPY --chown=gateway:nodejs package*.json ./

# Create logs directory
RUN mkdir -p logs && chown gateway:nodejs logs

# Switch to non-root user
USER gateway

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application
CMD ["node", "dist/index.js"]